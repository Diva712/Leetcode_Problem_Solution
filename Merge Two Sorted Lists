You are given the heads of two sorted linked lists list1 and list2.

Merge the two lists in a one sorted list. The list should be made by splicing together the nodes of the first two lists.

Return the head of the merged linked list.

 

Example 1:


Input: list1 = [1,2,4], list2 = [1,3,4]
Output: [1,1,2,3,4,4]
Example 2:

Input: list1 = [], list2 = []
Output: []
Example 3:

Input: list1 = [], list2 = [0]
Output: [0]

########3
solution
class Solution {
public:
    ListNode* mergeTwoLists(ListNode* list1, ListNode* list2) {
        if(list1==NULL){
            return list2;
        }
        if(list2 == NULL){
            return list1;
        }
        ListNode *ptr1 = list1;
        if(list2->val < list1->val){
            ptr1 = list2;
            list2 = list2->next;
        }
        else{
            list1 = list1->next;
        }
        ListNode*curr = ptr1;
        while(list1!=NULL && list2!=NULL){
            if(list1->val<list2->val){
                curr->next = list1;
                list1 = list1->next;
            }
            else{
                curr->next = list2;
                list2 = list2->next;
            }
            curr = curr->next;
        }

        if(list1!=NULL){
            curr->next = list1;
        }
        else{
            curr->next = list2;
        }

        return ptr1;
    }
};

Given an integer array nums of unique elements, return all possible 
subsets
 (the power set).

The solution set must not contain duplicate subsets. Return the solution in any order.

 

Example 1:

Input: nums = [1,2,3]
Output: [[],[1],[2],[1,2],[3],[1,3],[2,3],[1,2,3]]
Example 2:

Input: nums = [0]
Output: [[],[0]]
 
 
 #############
 solution
 class Solution {
public:
    vector<vector<int>>vec;
    void function (int index , vector<int>ds , vector<int>&nums){
        if(index == nums.size()){
            vec.push_back(ds);
            return;
        }
        function(index+1 , ds , nums);
        ds.push_back(nums[index]);
        function(index+1 , ds , nums);
        ds.pop_back();
       // function(index+1 , ds , nums);
    }
    vector<vector<int>> subsets(vector<int>& nums) {
        vector<int>ds;
        function(0,ds,nums);
        return vec;
    }
};
